{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","getGifs","category","a","process","url","encodeURI","fetch","res","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categories","cat","console","log","ReactDOM","render","document","getElementById"],"mappings":"qMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,SAEfP,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAA0BM,OACxCL,EAAc,OAKZ,2BAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAfhB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACLC,mCACVC,EAFe,iDAEkCC,UAAUJ,GAF5C,+BAGHK,MAAM,GAAD,OAAIF,GAAJ,OAFPD,qCADK,cAGfI,EAHe,gBAIAA,EAAIC,OAJJ,uBAIdC,EAJc,EAIdA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAYdM,GAZc,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAClC,OACE,yBAAKc,UAAU,wBACb,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,2BAAIA,KCFGO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAPAC,qBAAU,WACRzB,EAAQC,GACPyB,MAAK,SAAAC,GACJH,EAAS,CAACf,KAAKkB,EAAML,SAAS,SAEhC,CAACrB,IAEIsB,EDVwBK,CAAa3B,GAAhCc,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACE,oCACE,4BAAKrB,GACHqB,GAAW,uBAAGJ,UAAU,mBAAb,cACb,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAACkB,GAAD,OACT,kBAAC,EAAD,eAAaC,IAAKD,EAAIhB,IAAQgB,UEQ7BE,EAnBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,YADrB,mBAClB4C,EADkB,KACN7C,EADM,KAEzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,6BAEI6C,EAAWrB,KAAI,SAACsB,GAAD,OACb,kBAAC,EAAD,CAASH,IAAKG,EAAKhC,SAAUgC,U,8BCHzCC,QAAQC,IAAIhC,gLAEZiC,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,U","file":"static/js/main.dcbdbaeb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!inputValue.trim()) return\r\n\r\n    setCategories((cats) => [inputValue, ...cats])\r\n    setInputValue('')\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n  const API_KEY = process.env.REACT_APP_API_KEY_GIPHY || 'your_api_key';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=`\r\n  const res = await fetch(`${url}${API_KEY}`)  \r\n  const {data} = await res.json()\r\n  const gifs = data.map(gif => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div className=\"card animated fadeIn\">\r\n      <img src={url} alt={ title } />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      { loading && <p className=\"animated bounce\">Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {\r\n            images.map((img) => (\r\n              <GifGridItem key={img.id} {...img} />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(imgs => {\r\n      setState({data:imgs, loading: false})\r\n    })\r\n  },[category])\r\n\r\n  return state\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"pokemon\"]);\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <div>\r\n        {\r\n          categories.map((cat) => (\r\n            <GifGrid key={cat} category={cat} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nimport \"animate.css/source/_base.css\"\nimport \"animate.css/source/_vars.css\"\nimport \"animate.css/source/attention_seekers/bounce.css\"\nimport \"animate.css/source/fading_entrances/fadeIn.css\"\n\nconsole.log(process.env)\n\nReactDOM.render(<GifExpertApp/>,document.getElementById('root'));\n"],"sourceRoot":""}